/*
    HTML5 Reset :: style.css
    ----------------------------------------------------------
    We have learned much from/been inspired by/taken code where offered from:

    Eric Meyer                  :: http://ericmeyer.com
    HTML5 Doctor                :: http://html5doctor.com
    and the HTML5 Boilerplate   :: http://html5boilerplate.com

-------------------------------------------------------------------------------*/
/* Let's default this puppy out
-------------------------------------------------------------------------------*/
html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, hgroup, menu, nav, section, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

article, aside, figure, footer, header, hgroup, nav, section {
  display: block; }

/* Responsive images and other embedded objects
   Note: keeping IMG here will cause problems if you're using foreground images as sprites.
   If this default setting for images is causing issues, you might want to replace it with a .responsive class instead. */
img,
object,
embed {
  max-width: 100%; }

/* force a vertical scrollbar to prevent a jumpy page */
/* we use a lot of ULs that aren't bulleted.
  don't forget to restore the bullets within content. */
ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help; }

/* tables still need cellspacing="0" in the markup */
table {
  border-collapse: collapse;
  border-spacing: 0; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

input, select {
  vertical-align: middle; }

pre {
  white-space: pre;
  /* CSS2 */
  white-space: pre-wrap;
  /* CSS 2.1 */
  white-space: pre-line;
  /* CSS 3 (and 2.1 as well, actually) */
  word-wrap: break-word;
  /* IE */ }

input[type="radio"] {
  vertical-align: text-bottom; }

input[type="checkbox"] {
  vertical-align: bottom;
  *vertical-align: baseline; }

select, input, textarea {
  font: 99% sans-serif; }

table {
  font-size: inherit;
  font: 100%; }

/* Accessible focus treatment
    people.opera.com/patrickl/experiments/keyboard/test
a:hover,
a:focus,
a:active {
  outline: none;
}*/
small {
  font-size: 85%; }

strong, th {
  font-weight: bold; }

td, td img {
  vertical-align: top; }

/* Make sure sup and sub don't screw with your line-heights
    gist.github.com/413930 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* standardize any monospaced elements */
pre, code, kbd, samp {
  font-family: monospace, sans-serif; }

/* hand cursor on clickable elements */
.clickable,
input[type=button],
input[type=submit],
button {
  cursor: pointer; }

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* Style clickable inputs in iOS */ }

/* Webkit browsers add a 2px margin outside the chrome of form elements */
button, input, select, textarea {
  margin: 0; }

/* make buttons play nice in IE */
/* button {width: auto; overflow: visible;} */
button,
input {
  *overflow: visible;
  /* Inner spacing ie IE6/7 */
  line-height: normal;
  /* FF3/4 have !important on line-height in UA stylesheet */ }

button::-moz-focus-inner,
input::-moz-focus-inner {
  /* Inner padding and border oddities in FF3/4 */
  padding: 0;
  border: 0; }

/* scale images in IE7 more attractively */
/* prevent BG image flicker upon hover */
/* let's clear some floats */
.clearfix:before, .clearfix:after {
  content: "\0020";
  display: block;
  height: 0;
  overflow: hidden; }

.clearfix:after {
  clear: both; }

.clearfix {
  zoom: 1; }

/* Ok, this is where the fun starts.
-------------------------------------------------------------------------------*/
/* new Linux- and Windows-friendly sans-serif font stack: http://mky.be/fontstack */
body {
  font: 16px Helmet, Freesans, sans-serif; }

/* using local fonts? make sure to read up on Paul Irish's
  Bulletproof @font-face syntax: http://mky.be/font-face/bulletproof/ */
/* we like off-black for text */
/*body, select, input, textarea {color: #333;}*/
/*a {color: #03f;}
a:hover {color: #69f;}*/
/* Custom text-selection colors (remove any text shadows: twitter.com/miketaylr/status/12228805301) */
/*::-moz-selection{background: #fcd700; color: #fff; text-shadow: none;}
::selection {background: #fcd700; color: #fff; text-shadow: none;}*/
/*  j.mp/webkit-tap-highlight-color */
/*a:link {-webkit-tap-highlight-color: #fcd700;}*/
/*ins {background-color: #fcd700; color: #000; text-decoration: none;}
mark {background-color: #fcd700; color: #000; font-style: italic; font-weight: bold;}*/
body, html {
  width: 100%;
  height: 100%; }

a {
  text-decoration: none; }

a, button {
  cursor: pointer;
  font-size: 100%; }

ul, li {
  padding: 0;
  margin: 0; }

button {
  border: 0;
  padding: 0;
  margin: 0; }

@font-face {
  font-family: 'arima_madurairegular';
  src: url("fonts/arima/arimamadurai-regular-webfont.woff2") format("woff2"), url("fonts/arima/arimamadurai-regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'arima_maduraibold';
  src: url("fonts/arima/arimamadurai-bold-webfont.woff2") format("woff2"), url("fonts/arima/arimamadurai-bold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'arima_madurailight';
  src: url("fonts/arima/arimamadurai-light-webfont.woff2") format("woff2"), url("fonts/arima/arimamadurai-light-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'arima_maduraimedium';
  src: url("fonts/arima/arimamadurai-medium-webfont.woff2") format("woff2"), url("fonts/arima/arimamadurai-medium-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'arima_maduraiextrabold';
  src: url("fonts/arima/arimamadurai-extrabold-webfont.woff2") format("woff2"), url("fonts/arima/arimamadurai-extrabold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'icomoon';
  src: url("fonts/icomoon/icomoon.eot?ft0vyq");
  src: url("fonts/icomoon/icomoon.eot?ft0vyq#iefix") format("embedded-opentype"), url("fonts/icomoon/icomoon.ttf?ft0vyq") format("truetype"), url("fonts/icomoon/icomoon.woff?ft0vyq") format("woff"), url("fonts/icomoon/icomoon.svg?ft0vyq#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-envelop:before {
  content: "\e945"; }

.icon-facebook:before {
  content: "\ea91"; }

html {
  -webkit-overflow-scrolling: touch; }
  html.fix {
    overflow: hidden; }

#page {
  position: relative;
  width: 100%;
  overflow: hidden;
  height: 2000px; }

h1, h2, h3, h4, h5, h6, p, span, a, li, label, strong, button, input {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);
  line-height: 1; }

header {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  background-color: transparent;
  transition: background-color 0.35s ease;
  overflow: hidden;
  z-index: 9999;
  box-shadow: 0 0 4px #333;
  transform: translateZ(0);
  backface-visibility: hidden; }
  header a {
    color: white;
    display: block; }
  header .hdr-wrapper {
    display: table;
    width: 100%;
    border-bottom: 1px solid white; }
    header .hdr-wrapper > div {
      display: table-cell;
      vertical-align: middle;
      text-align: center;
      font-family: "arima_madurairegular"; }
      header .hdr-wrapper > div.logo {
        font-family: "arima_maduraibold";
        width: 20%; }
        header .hdr-wrapper > div.logo a {
          display: inline-block;
          font-size: 18px;
          width: 100%;
          position: relative; }
        header .hdr-wrapper > div.logo h1 {
          position: absolute;
          width: 100%;
          top: -13px;
          overflow: hidden;
          transition: top 0.35s ease; }
          header .hdr-wrapper > div.logo h1 span {
            display: block; }
            header .hdr-wrapper > div.logo h1 span.top {
              padding-bottom: 20px; }
      header .hdr-wrapper > div.social {
        font-family: "arima_maduraibold";
        width: 20%; }
        header .hdr-wrapper > div.social a {
          display: inline-block;
          font-size: 24px; }
          header .hdr-wrapper > div.social a + a {
            padding-left: 20px; }
      header .hdr-wrapper > div.navbar {
        width: 60%; }
        header .hdr-wrapper > div.navbar ul {
          display: table;
          width: 100%;
          border-left: 1px solid white;
          border-right: 1px solid white; }
          header .hdr-wrapper > div.navbar ul li {
            position: relative;
            display: inline-block;
            float: left;
            width: 20%;
            overflow: hidden;
            transition: all 0.35s ease; }
            header .hdr-wrapper > div.navbar ul li + li > a {
              border-left: 1px solid white; }
            header .hdr-wrapper > div.navbar ul li.active {
              background-color: rgba(64, 224, 208, 0.6);
              color: white; }
            header .hdr-wrapper > div.navbar ul li > a {
              padding: 20px 30px 18px;
              text-transform: uppercase;
              transition: all 0.35s ease; }
              header .hdr-wrapper > div.navbar ul li > a:hover {
                background-color: rgba(64, 224, 208, 0.4);
                color: white; }
  header.small {
    background-color: rgba(255, 255, 255, 0.8); }
    header.small a {
      color: black; }
    header.small .hdr-wrapper {
      border-bottom: 1px solid black; }
      header.small .hdr-wrapper > div.logo h1 {
        top: -49px;
        font-size: 16px; }
      header.small .hdr-wrapper > div.navbar ul {
        border-left: 1px solid black;
        border-right: 1px solid black; }
        header.small .hdr-wrapper > div.navbar ul li + li > a {
          border-left: 1px solid black; }
        header.small .hdr-wrapper > div.navbar ul li > a {
          padding: 15px 30px 12px; }
          header.small .hdr-wrapper > div.navbar ul li > a:hover {
            background-color: black;
            color: white; }
        header.small .hdr-wrapper > div.navbar ul li.active {
          background-color: black; }
          header.small .hdr-wrapper > div.navbar ul li.active > a {
            color: white; }

section.home {
  background-color: green; }
  section.home .section {
    display: -ms-flexbox;
    display: flex; }
  section.home #home {
    background-color: blue;
    -ms-flex-align: center;
        -ms-grid-row-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center;
    width: 100%;
    height: 100vh;
    position: relative; }
    section.home #home .home-content {
      position: relative;
      z-index: 1000; }
      section.home #home .home-content h2 {
        text-align: center;
        text-transform: uppercase;
        font-family: "arima_maduraiextrabold";
        color: white;
        font-size: 60px; }
    section.home #home .slider {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh; }
      section.home #home .slider .overlay {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-color: rgba(0, 0, 0, 0.7);
        z-index: 900; }
      section.home #home .slider .rslides {
        position: relative;
        list-style: none;
        overflow: hidden;
        width: 100%;
        height: 100vh;
        padding: 0;
        margin: 0; }
      section.home #home .slider .rslides li {
        -webkit-backface-visibility: hidden;
        position: absolute;
        display: none;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0; }
        section.home #home .slider .rslides li .item {
          position: relative;
          width: 100%;
          height: 100%;
          background-position: center center;
          background-repeat: no-repeat;
          background-size: cover; }
      section.home #home .slider .rslides li:first-child {
        position: relative;
        display: block;
        float: left; }
      section.home #home .slider .rslides img {
        display: block;
        height: auto;
        float: left;
        width: 100%;
        border: 0; }
      section.home #home .slider .pagination {
        position: absolute;
        bottom: 40px;
        width: 100%;
        text-align: center;
        z-index: 900; }
        section.home #home .slider .pagination li {
          display: inline-block; }
          section.home #home .slider .pagination li + li {
            margin-left: 10px; }
          section.home #home .slider .pagination li > a {
            display: block;
            background-color: white;
            border-radius: 50%;
            width: 10px;
            height: 10px; }
          section.home #home .slider .pagination li.rslides_here > a {
            background-color: turquoise; }
  section.home #projects {
    background-color: red;
    width: 100%;
    height: 100vh;
    position: relative; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
